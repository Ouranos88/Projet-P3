int file = open(filename,O_RDONLY);
if (file<0){
    return -1;
}
struct stat buf;
int fstat_file = fstat(file,&buf);
if (fstat_file<0){
    return -1;
}
int size;
size = buf.st_size/sizeof(int);
if (size<=index){
    if (close(file)<0){
        return -1;
    }
    return -2;
}
int *file_mmap = mmap(NULL,buf.st_size,PROT_READ,MAP_PRIVATE,file,0);
    if (file_mmap == (void*)-1){
        return -1;
    }
int id = *(file_mmap+index);
int file_munmap = munmap(file_mmap,buf.st_size);
if (file_munmap<0){
    return -1;
}
if (close(file)<0){
    return -1;
}
return id;

----------------------------------------

int file = open(filename,O_RDWR);
if (file<0){
    return ;
}
struct stat buf;
int fstat_file = fstat(file,&buf);
if (fstat_file<0){
    return ;
}
int size;
size = buf.st_size/sizeof(int);
if (index<size){
int *mmap_file = mmap(NULL,buf.st_size,PROT_WRITE,MAP_SHARED,file,0);
    if (mmap_file == MAP_FAILED){
        return ;
    }
     *(mmap_file+index) = value;
    int msync_file = msync(mmap_file,buf.st_size,MS_SYNC);
    if (msync_file<0){
        return;
    }
    int file_munmap = munmap(mmap_file,buf.st_size);
    if (file_munmap<0){
    return ;
}
}
if (close(file)<0){
    return ;
}